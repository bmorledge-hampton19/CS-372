import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.swing.*;

public class ShapeViewer extends JComponent implements MouseListener, ActionListener {

	private Image circleImage;
	private Image squareImage;
	private Image rectangleImage;
	private Image triangleImage;

	private JFrame frame;
	
	private JTextField searchBar;
	private JButton searchButton;
	
	private Map<Integer, Shape> shapes;
	
	private Image loadImage(String fileLocation, int width, int height) {
		Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource(fileLocation));
		image = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);
		return image;
	}
	
	ShapeViewer(ArrayList<Shape> shapes) {
		
		this.shapes = new HashMap<Integer, Shape>(); // Hashmap!  Cause Why not!?
		
		for (Shape s : shapes) {
			this.shapes.put(s.getID(), s);
		}
		
		circleImage = loadImage("src/res/Circle.png",500,500);
		squareImage = loadImage("src/res/Square.png",500,500);
		rectangleImage = loadImage("src/res/Rectangle.png",500,300);
		triangleImage = loadImage("src/res/Triangle.png",500,500);
		
		searchBar = new JTextField(20);
		searchButton = new JButton("Search");
		
		searchButton.addActionListener(this);
		addMouseListener(this);
		
		this.setLayout(new FlowLayout());
		
		this.add(searchBar);
		this.add(searchButton);
		
		frame = new JFrame("Shape Viewer Deluxe");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.add(this);
		frame.setSize(1000, 1000);
		frame.setVisible(true);
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource() == searchButton) {
			
			if (searchBar.getText().length()>0) {
				shapeViewing = Integer.parseInt(searchBar.getText());
				searchBar.setText("");
				repaint();
			}
			
		}
		
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		
		
		
	}

	public void mouseEntered(MouseEvent e) {}
	public void mouseExited(MouseEvent e) {	}
	public void mousePressed(MouseEvent e) {}
	public void mouseReleased(MouseEvent e) {}
	
}
